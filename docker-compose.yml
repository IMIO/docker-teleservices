# This file is mainly relevant for development (local) purposes.
# It is not used in production and is not representative of the production environment.
# The production docker-compose.yml is generated from this file : docker-compose.yml.erb
# in the industrialisation repository.
version: "2.4"

services:
  teleservices:
    build:
      args:
        DEBIAN_VERSION: bookworm
      context: teleservices
    image: teleservices/bookworm:latest
    mem_limit: 2048m
    ports:
      - "80:80"
    extra_hosts:
      local.example.net: 127.0.0.1
      local-portail-agent.example.net: 127.0.0.1
      local-agendas.example.net: 127.0.0.1
      local-auth.example.net: 127.0.0.1
      local-formulaires.example.net: 127.0.0.1
      local-documents.example.net: 127.0.0.1
      local-passerelle.example.net: 127.0.0.1
      local-hobo.example.net: 127.0.0.1
      local-stats.example.net: 127.0.0.1
    volumes:
      - ./data/hobo:/var/lib/hobo/tenants
      - ./data/chrono:/var/lib/chrono/tenants
      - ./data/combo:/var/lib/combo/tenants
      - ./data/authentic2:/var/lib/authentic2-multitenant/tenants
      - ./data/wcs:/var/lib/wcs
      - ./data/passerelle:/var/lib/passerelle/tenants
      - ./config/nginx:/etc/nginx/sites-available
      - ./config/chrono/secret:/etc/chrono/secret
      - ./config/chrono/settings.d:/etc/chrono/settings.d
      - ./config/combo/secret:/etc/combo/secret
      - ./config/combo/settings.d:/etc/combo/settings.d
      - ./config/authentic2/secret:/etc/authentic2-multitenant/secret
      - ./config/authentic2/settings.d:/etc/authentic2-multitenant/settings.d
      - ./config/authentic2/settings.json:/etc/authentic2-multitenant/settings.json
      - ./config/hobo/secret:/etc/hobo/secret
      - ./config/hobo/recipe.json:/etc/hobo/recipe.json
      - ./config/hobo/extra:/etc/hobo/extra
      - ./config/hobo/settings.d:/etc/hobo/settings.d
      - ./config/hobo-agent/settings.d:/etc/hobo-agent/settings.d
      - ./config/passerelle/secret:/etc/passerelle/secret
      - ./config/passerelle/settings.d:/etc/passerelle/settings.d
      - ./config/wcs/secret:/etc/wcs/secret
      - ./config/wcs/settings.d:/etc/wcs/settings.d
    command: /bin/sh -c "sleep 10 ; /run.sh"
    depends_on:
      - database
      - rabbitmq
  rabbitmq:
    image: rabbitmq:3.7
    hostname: rabbitmq
  database:
    image: postgres
    hostname: postgres
    container_name: postgres
    volumes:
      - ./data/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
    environment:
      - "POSTGRES_PASSWORD=password"
  memcached:
    image: memcached
    hostname: memcached

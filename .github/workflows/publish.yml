name: Update bookworm images in Harbor
on:
  schedule:
    - cron: '0 5 * * 0' # Weekly on Sundays at 05:00
  workflow_dispatch:
jobs:
  bookworm:
    runs-on:
      group: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Harbor prod registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.HARBOR_URL_PROD }}
          username: ${{ secrets.TELESERVICES_HARBOR_USERNAME_PROD }}
          password: ${{ secrets.TELESERVICES_HARBOR_PASSWORD_PROD }}
      - name: Login to Harbor staging registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.HARBOR_URL_STAGING }}
          username: ${{ secrets.TELESERVICES_HARBOR_USERNAME_STAGING }}
          password: ${{ secrets.TELESERVICES_HARBOR_PASSWORD_STAGING }}
      - name: Build push bookworm image to staging registry
        uses: docker/build-push-action@v2.5.0
        with:
          context: teleservices
          file: teleservices/Dockerfile
          tags: ${{ secrets.HARBOR_URL_STAGING }}/teleservices/bookworm:latest
          platforms: linux/amd64
          pull: true
          push: true
          target: prod-image
          build-args: |
            DEBIAN_VERSION=bookworm
      - name: Build push bookworm-test image to staging registry
        uses: docker/build-push-action@v2.5.0
        with:
          context: teleservices
          file: teleservices/Dockerfile
          tags: ${{ secrets.HARBOR_URL_STAGING }}/teleservices/bookworm-test:latest
          platforms: linux/amd64
          pull: true
          push: true
          target: prod-image
          build-args: |
            DEBIAN_VERSION=bookworm
      - name: Install curl
        run: sudo apt-get update && sudo apt-get install -y curl
      - name: Restart staging instance
        run: |
          curl -k --fail --show-error --header "X-Rundeck-Auth-Token:${{ secrets.TELESERVICES_RUNDECK_TOKEN }}" -d "argString=-name staging" -d "filter=name ts001.staging.imio.be" ${{ secrets.RUNDECK_URL }}/api/18/job/94b605f2-ad32-4f9f-977e-37342f6b7d32/run/
      - name : Send notification on Mattermost
        run: |
          JOB_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          MESSAGE="docker image has been updated on staging registry and the staging instance has been restarted. [Click here to see job on GitHub]($JOB_URL)"
          curl -i -X POST -H 'Content-Type: application/json' -d "{\"text\": \"$MESSAGE\"}" ${{ secrets.TELESERVICES_MATTERMOST_WEBHOOK_URL }}
